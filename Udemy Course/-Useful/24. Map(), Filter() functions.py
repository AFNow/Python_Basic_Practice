# Встроенная в Python функция map() используется для применения функции к каждому элементу итерируемого объекта (например, списка или словаря) 
# и возврата нового итератора для получения результатов. Функция map() возвращает объект map (итератор), 
# который мы можем использовать в других частях нашей программы. Также мы можем передать объект map в функцию list() 
# или другой тип последовательности для создания итерируемого объекта
# Функция map() имеет следующий синтаксис:
#    map(function, iterable, [iterable 2, iterable 3, ...])
def cube(x): # Функция возводит число в куб
    return x*x*x
numbers1 = [1,3,5,7,9]
numbers2 = [2,5,4,6,8,1,2,9,6,2]
print (list (map (cube, numbers1)))# Встроенная функция map() применяет написанную функцию к итерируемому объекту (numbers)

def count(x): # Неверная задача
    y = []
    for item in x:
        if len(str(item)) == 1:
            y.append ('single')
        elif len(str(item)) == 2:
            y.append ('duo')
        elif len(str(item)) == 3:
            y.append ('trio')
    print (y)
    return (y)
x = [11, 12, 5, 332, 150, 4]
count(x)

# Напишите функцию square, которая принимает список чисел и возвращает список квадратов этих чисел. 
# Используйте функцию map для решения этой задачи.
def square(z): 
    return z**2
print (list (map (square, numbers1)))

# Функция filter() в Python применяет другую функцию к заданному итерируемому объекту (список, строка, словарь и так далее), 
# проверяя, нужно ли сохранить конкретный элемент или нет. Простыми словами, она отфильтровывает на основании True или False то, 
# что не проходит и возвращает все остальное
def even(y):
    return y%2 == 0
print(list(filter(even, numbers2)))

# Выражения lambda применяются как упрощенная замена функциям def для упрощения и уменьшения объемов написанного кода. 
# В выше описанной задаче была описана функция, которая выводила из списка новый список чисел, возведенных во вторую степень, 
# ее можно значительно упростить, через использование функции lambda
print(list(map(lambda num:num**2, numbers1)))