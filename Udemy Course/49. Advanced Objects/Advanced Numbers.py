# Python имеет встроенные функции конвертации числовых данных, а также упрощенные аналоги обычных формул.
import math
# Шестнадцатеричное представление - конвертация в шестнадцатеричный формат, через функцию hex()
print (hex(1024))

# Бинарное представление - конвертация в бинарный код, через функцию bin()
print (bin(1024))

# Возведение в степень числа, через функцию pow(x,y,z), где (x^y)%z
print (pow(2,3))
print (pow(3,2,2))# - возведение в степнь и деление с остатком

# Возвращает абсолютное значение числа, или модуль, если это комплексное число
print (abs(-3.14))

# Округление, через функцию round(x,y) - где y - это уровень округления после целого числа
print(round(math.pi))
print(round(math.pi,4))

# Встроенный модуль math - предоставляет расширенные математические функции, а также модуль cmath - предназначен для работы с комплексными числами.
# Иррациональные числа:
    # math.pi               - pi = 3,1415926...
    # math.e                - e = 2,718281...

# Округления: 
    # math.ceil(X)          – округление до ближайшего большего числа.
    # math.floor(X)         - округление вниз.
    # math.fabs(X)          - модуль X.
    # math.trunc(X)         - усекает значение X до целого.

# Определения:
    # math.isfinite(X)      - является ли X числом.
    # math.isinf(X)         - является ли X бесконечностью.
    # math.isnan(X)         - является ли X NaN (Not a Number - не число).

#Вычисления:
    # math.fsum()           - сумма всех членов последовательности. Эквивалент встроенной функции sum(), но math.fsum() более точна для чисел с плавающей точкой.
    # math.pow(X, Y)        - XY.
    # math.fmod(X, Y)       - остаток от деления X на Y.
    # math.sqrt(X)          - квадратный корень из X.
    # math.factorial(X)     - факториал числа X. (умножение последовательности чисел до числа X)

    # math.cos(X)           - косинус X (X указывается в радианах).
    # math.sin(X)           - синус X (X указывается в радианах).
    # math.tan(X)           - тангенс X (X указывается в радианах).

    # math.acos(X)          - арккосинус X. В радианах.
    # math.asin(X)          - арксинус X. В радианах.

    # math.atan(X)          - арктангенс X. В радианах.
    # math.atan2(Y, X)      - арктангенс Y/X. В радианах. С учетом четверти, в которой находится точка (X, Y).

    # math.cosh(X)          - вычисляет гиперболический косинус.
    # math.sinh(X)          - вычисляет гиперболический синус.
    # math.tanh(X)          - вычисляет гиперболический тангенс.
    # math.acosh(X)         - вычисляет обратный гиперболический косинус.
    # math.asinh(X)         - вычисляет обратный гиперболический синус.
    # math.atanh(X)         - вычисляет обратный гиперболический тангенс.

    # math.hypot(X, Y)      - вычисляет гипотенузу треугольника с катетами X и Y (math.sqrt(x * x + y * y)).

# Логарифмы:
    # math.exp(X)           - eX. log(x, base) — вычисляет логарифм числа x по основанию base. Если base не указан, то вычисляется натуральный логарифм.
    # math.expm1(X)         - eX - 1. При X → 0 точнее, чем math.exp(X)-1.
    # math.log(X, [b])      - логарифм X по основанию base. Если base не указан, вычисляется натуральный логарифм.
    # math.log1p(X)         - натуральный логарифм (1 + X). При X → 0 точнее, чем math.log(1+X).
    # math.log10(X)         - логарифм X по основанию 10.
    # math.log2(X)          - логарифм X по основанию 2.

# Конвертация
    # math.degrees(X)       - конвертирует радианы в градусы.
    # math.radians(X)       - конвертирует градусы в радианы.

    # math.frexp(X)         - возвращает мантиссу и экспоненту числа.
    # math.ldexp(X, I)      - X * 2i. Функция, обратная функции math.frexp().
    # Мантисса  — число, записанное без точки. Экспонента — степень, в которую нужно возвести некое число N (как правило, N = 2), 
    #чтобы при перемножении на мантиссу получить искомое число
    
    # math.copysign(X, Y)   - возвращает число, имеющее модуль такой же, как и у числа X, а знак - как у числа Y.
    # math.modf(X)          - возвращает дробную и целую часть числа X. Оба числа имеют тот же знак, что и X.

# Дифференциальные уравнения
    # math.erf(X)           - функция ошибок.
    # math.erfc(X)          - дополнительная функция ошибок (1 - math.erf(X)).

# Гамма-функции
    # math.gamma(X)         - гамма-функция X.
    # math.lgamma(X)        - натуральный логарифм гамма-функции X.
